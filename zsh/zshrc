# Salar Rahmanian - .zshrc file
#
# Custom Completion Funcs
fpath+=~/.zfunc

# Detect OS
platform='unknown'
unamestr=`uname`
unamestrdtl=`uname -a`
if [[ "$unamestrdtl" == *"amzn"* ]] then
    platform='amazonwrk'
elif [[ "$unamestr" == 'Linux' ]]; then
   platform='linux'
elif [[ "$unamestr" == 'FreeBSD' ]]; then
   platform='freebsd'
elif [[ "$unamestr" == 'Darwin' ]]; then
   platform='macosx'
fi

# zplug
if [[ ! -d ~/.zplug ]]; then
  git clone https://github.com/zplug/zplug ~/.zplug
  source ~/.zplug/init.zsh && zplug update --self
fi

source ~/.zplug/init.zsh

DEFAULT_USER=salar
HISTSIZE=1000

zplug "zplug/zplug"
zplug denysdovhan/spaceship-prompt, use:spaceship.zsh, from:github, as:theme
zplug "modules/git", from:prezto 
zplug "modules/history", from:prezto 
zplug "modules/ssh", from:prezto 
zplug "modules/terminal", from:prezto 
zplug "modules/homebrew", from:prezto 
zplug "modules/python", from:prezto 
zplug "modules/node", from:prezto 
zplug "lukechilds/zsh-better-npm-completion", defer:2
zplug "zsh-users/zsh-completions"
zplug "zsh-users/zsh-autosuggestions"
if zplug check zsh-users/zsh-autosuggestions; then
  ZSH_AUTOSUGGEST_CLEAR_WIDGETS+=(history-substring-search-up history-substring-search-down) # Add history-substring-search-* widgets to list of widgets that clear the autosuggestion
  ZSH_AUTOSUGGEST_CLEAR_WIDGETS=("${(@)ZSH_AUTOSUGGEST_CLEAR_WIDGETS:#(up|down)-line-or-history}") # Remove *-line-or-history widgets from list of widgets that clear the autosuggestion to avoid conflict with history-substring-search-* widgets
fi
zplug "zsh-users/zsh-syntax-highlighting"
zplug "zsh-users/zsh-history-substring-search"
if zplug check zsh-users/zsh-history-substring-search; then
  zmodload zsh/terminfo
  bindkey "$terminfo[cuu1]" history-substring-search-up
  bindkey "$terminfo[cud1]" history-substring-search-down
fi
zplug "b4b4r07/enhancd", use:init.sh
zplug "lukechilds/zsh-nvm"
zplug "supercrabtree/k"
zplug "rupa/z", use:z.sh

if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

zplug load 

# General
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export TERM=xterm-256color
export PATH=/usr/local/bin:$PATH

# vim / Neovim
alias vim="nvim"
alias vimdiff='nvim -d'
export PATH=~/notes:$PATH
alias notes="cd ~/notes; fuz"
alias notesi="cd ~/notes; nvim"
alias nvimi="nvim +PlugInstall +UpdateRemotePlugins +qa"
alias nvimu="nvim +PlugUpgrade +PlugUpdate +UpdateRemotePlugins +qa"
export EDITOR=nvim

# GTAGS
export GTAGSLIBPATH=/usr/include/

# FZF and ripgrep
# --files: List files that would be searched but do not search
# --no-ignore: Do not respect .gitignore, etc...
# --hidden: Search hidden files and folders
# --follow: Follow symlinks
# --glob: Additional conditions for search (in this case ignore everything in the .git/ folder)
export FZF_DEFAULT_COMMAND='rg --files --hidden --follow --glob "!.git/*"'

# Go Lang
export GOPATH=$HOME/goprojects
export PATH=$PATH:$GOPATH/bin

# Python
if [[ $platform == 'macosx' ]]; then
    export CFLAGS="-I$(brew --prefix openssl)/include"
    export LDFLAGS="-L$(brew --prefix openssl)/lib"
fi
if [[ $platform == 'amazonwrk' ]]; then
    export PATH="~/.pyenv/plugins/pyenv-virtualenv/bin:~/.pyenv/bin:~/idea-IU-181.5281.24/bin:$PATH"
fi
export PYENV_ROOT=$HOME/.pyenv
export PATH=$PYENV_ROOT/bin:$PATH
export PIPENV_PYTHON=$PYENV_ROOT/shims/python
if which pyenv > /dev/null; then eval "$(pyenv init -)"; fi
if which pyenv-virtualenv-init > /dev/null; then eval "$(pyenv virtualenv-init -)"; fi

# Java
test -e "/usr/libexec/java_home" && export JAVA_HOME=$(/usr/libexec/java_home)

# Scala
export SCALA_HOME=/usr/local/opt/scala/idea
export PATH=$PATH:$SCALA_HOME/bin:~/.dotfiles/bin
export BROWSER="firefox %s"
alias ssbt="sarsi-sbt"
alias amm="amm --no-remote-logging"
alias stags="ng co.pjrt.stags.cli.Main"

# Haskell
export PATH=/Users/srahmanian/.local/bin:$PATH

# aliases 
alias dc="docker-compose"
alias pj='python -m json.tool'

# Shell improvements
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# Logbook
function lb() {
    nvim ~/logbook/$(date '+%Y-%m-%d').md
}
# Aliases
alias sshfre1='ssh salar@fre1.softinio.net'

# NVM 
export NVM_DIR=$(realpath "$HOME/.nvm")
[[ -s $HOME/.nvm/nvm.sh ]] && . $HOME/.nvm/nvm.sh
alias npmls="npm list -g --depth=0"

[[ -f ~/.zshrc.local ]] && source ~/.zshrc.local
export PATH="/usr/local/sbin:$PATH"
