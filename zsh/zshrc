# Salar Rahmanian - .zshrc file
#
# Custom Completion Funcs
fpath+=~/.zfunc

# Detect OS
platform='unknown'
unamestr=`uname`
unamestrdtl=`uname -a`
if [[ "$unamestr" == 'Linux' ]]; then
   platform='linux'
elif [[ "$unamestr" == 'FreeBSD' ]]; then
   platform='freebsd'
elif [[ "$unamestr" == 'Darwin' ]]; then
   platform='macosx'
fi

# zsh
updatezsh() {
 antibody bundle <~/.dotfiles/zsh/zsh_plugins.txt >~/.zsh_plugins.sh
 antibody update
}
source ~/.zsh_plugins.sh
source ~/Library/Caches/antibody/https-COLON--SLASH--SLASH-github.com-SLASH-denysdovhan-SLASH-spaceship-prompt/spaceship.zsh
ZSH_AUTOSUGGEST_CLEAR_WIDGETS+=(history-substring-search-up history-substring-search-down) # Add history-substring-search-* widgets to list of widgets that clear the autosuggestion
ZSH_AUTOSUGGEST_CLEAR_WIDGETS=("${(@)ZSH_AUTOSUGGEST_CLEAR_WIDGETS:#(up|down)-line-or-history}") # Remove *-line-or-history widgets from list of widgets that clear the autosuggestion to avoid conflict with history-substring-search-* widgets
zmodload zsh/terminfo
bindkey "$terminfo[cuu1]" history-substring-search-up
bindkey "$terminfo[cud1]" history-substring-search-down
export ENHANCD_FILTER=fzf

# General
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export TERM=xterm-256color
# export PATH=/usr/local/bin:$PATH

# aliases 
alias dc="docker-compose"
alias pj='python -m json.tool'
alias cat="bat"
alias g="git"
alias gl="git log"
alias gws="git status"
alias nixre="darwin-rebuild switch"
alias nixgc="nix-collect-garbage -d"
alias nixq="nix-env -qa"
alias nixupgrade="sudo -i sh -c 'nix-channel --update && nix-env -iA nixpkgs.nix && launchctl remove org.nixos.nix-daemon && launchctl load /Library/LaunchDaemons/org.nixos.nix-daemon.plist'"
alias nixup="nix-env -u"

# vim / Neovim
alias vim="nvim"
alias vimdiff='nvim -d'
export PATH=~/notes:$PATH
alias notes="cd ~/notes; fuz"
alias notesi="cd ~/notes; nvim"
alias nvimi="nvim +PlugInstall +UpdateRemotePlugins +qa"
alias nvimu="nvim +PlugUpgrade +PlugUpdate +UpdateRemotePlugins +qa"
export EDITOR=nvim
alias tabninecfg="nvim /Users/srahmanian/Library/Preferences/TabNine/TabNine.toml"

# GTAGS
export GTAGSLIBPATH=/usr/include/

# FZF and ripgrep
# --files: List files that would be searched but do not search
# --no-ignore: Do not respect .gitignore, etc...
# --hidden: Search hidden files and folders
# --follow: Follow symlinks
# --glob: Additional conditions for search (in this case ignore everything in the .git/ folder)
export FZF_DEFAULT_COMMAND='rg --files --hidden --follow --glob "!.git/*"'

# Go Lang
export GOPATH=$HOME/goprojects
export PATH=$PATH:$GOPATH/bin

# Python
export PYENV_ROOT=$HOME/.pyenv
export PATH=$PYENV_ROOT/bin:$PATH
if which pyenv > /dev/null; then eval "$(pyenv init -)"; fi
if which pyenv-virtualenv-init > /dev/null; then eval "$(pyenv virtualenv-init -)"; fi

# Java
if [[ $platform == 'macosx' ]]; then
    export JAVA_HOME=$(/usr/libexec/java_home -v1.8)
else
    export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64
fi
export PATH=$PATH:$JAVA_HOME/bin

# Scala
export SCALA_HOME=/usr/local/opt/scala/idea
export PATH=$PATH:$SCALA_HOME/bin:~/.dotfiles/bin
alias amm="amm --no-remote-logging"
alias stags="ng co.pjrt.stags.cli.Main"
autoload -U compinit
fpath=($HOME/.bloop/zsh $fpath)
compinit

# Rust
export PATH=$PATH:$HOME/.cargo/bin

# Haskell
export PATH=$HOME/.bloop:$HOME/.local/bin:$PATH

# aliases 
alias dc="docker-compose"
alias pj='python -m json.tool'
alias cat="bat"

# Shell improvements
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# Logbook
function lb() {
    nvim ~/logbook/$(date '+%Y-%m-%d').md
}
# gitignore.io
gi () {
  curl -fL https://www.gitignore.io/api/${(j:,:)@}
}
# Aliases
alias sshfre1='ssh salar@fre1.softinio.net'

# NVM 
export NVM_DIR=$(realpath "$HOME/.nvm")
[[ -s $HOME/.nvm/nvm.sh ]] && . $HOME/.nvm/nvm.sh
alias npmls="npm list -g --depth=0"

[[ -f ~/.zshrc.local ]] && source ~/.zshrc.local
export PATH="/usr/local/sbin:$PATH"

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

# Nix
if [ -e /home/salar/.nix-profile/etc/profile.d/nix.sh ]; then . /home/salar/.nix-profile/etc/profile.d/nix.sh; fi # added by Nix installer


# added by travis gem
[ -f /home/salar/.travis/travis.sh ] && source /home/salar/.travis/travis.sh

# Haskell
. $HOME/.ghcup/env
